<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sekolah Backend</title>
    <link>https://sekolahbackend.web.app/id/</link>
    <description>Recent content on Sekolah Backend</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 10 Apr 2023 19:52:42 +0700</lastBuildDate><atom:link href="https://sekolahbackend.web.app/id/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tutorial Golang: Goroutine</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/24-goroutine/</link>
      <pubDate>Mon, 10 Apr 2023 19:52:42 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/24-goroutine/</guid>
      <description>Goroutine Goroutine adalah fitur dalam bahasa pemrograman Go yang dapat membuat sebuah tugas ringan (lightweight task) atau proses kecil yang berjalan secara independen di dalam aplikasi.
Dalam bahasa lain, Goroutine dapat diartikan sebagai sebuah bentuk konkurensi (concurrency) / asynchronous di mana tugas-tugas kecil atau proses-proses kecil dapat dijalankan secara bersamaan tanpa mengganggu satu sama lain.
Goroutine menggunakan thread sebagai sarana untuk menjalankan proses kecil tersebut.
Tapi, perlu diketahui bahwa Goroutine tidak sama dengan thread pada umumnya.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Package Reflect</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/23-reflect/</link>
      <pubDate>Thu, 06 Apr 2023 23:41:42 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/23-reflect/</guid>
      <description>Reflect Reflect merupakan package bawaan dari Go yang digunakan untuk mengakses dan memanipulasi informasi pada saat runtime.
Dalam Go informasi seperti tipe data, nama fungsi, dan struktur data tersedia pada saat kompilasi.
Namun, pada saat runtime, kita seringkali memerlukan akses ke informasi ini untuk membuat kode yang dinamis dan fleksibel.
Hal ini dimungkinkan dengan adanya package reflect.
Fungsi Package Reflect Package reflect menyediakan beberapa fungsi dan struktur data yang dapat digunakan untuk membaca informasi tipe data dan nilai pada saat runtime.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Interface Kosong</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/22-empty-interface/</link>
      <pubDate>Wed, 05 Apr 2023 21:34:05 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/22-empty-interface/</guid>
      <description>Interface kosong Salah satu fitur yang menarik di Golang adalah penggunaan empty interface.
interface{} Empty interface atau interface kosong, dapat digunakan untuk mewakili nilai apa pun di Golang.
Empty interface tidak memiliki method yang didefinisikan di dalamnya. Ini berarti empty interface tidak memiliki aturan apapun terkait dengan struktur atau nilai yang akan diterima.
Empty interface dapat merepresentasikan nilai apa pun, bahkan objek dari tipe data yang berbeda.
Penggunaan Empty Interface Berikut contoh penggunaan Empty Interface</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Interface</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/21-interface/</link>
      <pubDate>Mon, 03 Apr 2023 22:05:12 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/21-interface/</guid>
      <description>Interface Interface adalah salah satu fitur penting yang ada di bahasa pemrograman Go (Golang). Interface membantu developer dalam membuat kode yang fleksibel dan mudah di-maintain.
Interface adalah kumpulan definisi method tanpa implementasi yang digunakan sebagai template untuk mengimplementasikan fungsi yang berbeda-beda dari satu tipe data.
Artinya, interface memberikan sebuah blueprint tentang fungsi apa yang harus diimplementasikan oleh suatu tipe data yang memenuhi syarat-syarat yang telah ditentukan oleh interface.
Setiap tipe yang memenuhi semua metode dalam sebuah interface dianggap sebagai implementasi dari interface tersebut.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Public and Private</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/20-export-unexport/</link>
      <pubDate>Thu, 30 Mar 2023 20:55:34 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/20-export-unexport/</guid>
      <description>Package Sebelum belajar apa itu Public dan Private pada Go, ada baiknya kita memahami apa itu Package pada golang.
Di Go, package adalah cara untuk mengatur file source kode Go agar saling terikat.
Setiap program Go terdiri dari satu atau lebih package, dengan satu paket ditetapkan sebagai package utama.
Package utama adalah pintu masuk program dan berisi fungsi main() yang dijalankan pertama kali saat program dijalankan.
Sebuah package juga dapat digunakan oleh package lain dengan mengimpornya.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Method</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/19-method/</link>
      <pubDate>Tue, 28 Mar 2023 15:42:33 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/19-method/</guid>
      <description>Method Dalam Go, method sama dengan function, bedanya method memiliki receiver dan hanya dapat dipanggil melalui object / receivernya.
Berikut contoh syntax untuk membuat method pada Go:
func (r Receiver) namaFunc(arg int) string { return &amp;#34;&amp;#34; } Lalu untuk memanggilnya, kita dapat melakukan seperti ini:
result := r.namaFunc(arg) Receiver Receiver ini bisa dibilang pemilik dari sebuah method, ketika method dipanggil method akan memiliki nilai dari receivernya.
Begini contohnya:
type Murid struct { nama string kelas string umur int } func (m Murid) getNama() string { return m.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Struct</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/18-struct/</link>
      <pubDate>Mon, 27 Mar 2023 14:45:37 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/18-struct/</guid>
      <description>Struct Struct pada golang bisa dibilang sama dengan class pada bahasa pemrograman lain.
Struct berguna untuk mengelompokkan data bersama untuk membentuk kelompok data yang baru.
Inisialiasi struct Untuk inisialisasi struct, cukup dengan type Murid struct{}. Dengan berikut kita sudah membuat struct kosong bernama Murid.
Berikut contoh inisialisasi struct pada Golang:
type Murid struct { nama string kelas string umur int } Contoh diatas kita berhasil membuat struct Murid dengan attribute nama, kelas dan umur.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Pointer</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/17-pointer/</link>
      <pubDate>Sun, 26 Mar 2023 15:24:31 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/17-pointer/</guid>
      <description>Pointer Bahasa pemrograman Go memiliki pointer, mungkin buat yang pernah belajar bahasa C dan C++ ga asing lagi ya dengan namanya pointer.
Pointer itu fungsinya untuk menampung memory address dari sebuah value / variable.
Variable dan Pointer itu 2 hal yang berbeda, walau cara deklarasinya mirip.
Keuntungan pointer kita dapat menyimpan value nil
Inisialisasi Pointer Cara inisialisasi pointer sama dengan inisialisasi variable pada umumnya, hanya saja untuk pointer ditandai dengan symbol * sebelum penulisan tipe data.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Closure</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/16-closure/</link>
      <pubDate>Fri, 24 Mar 2023 16:37:28 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/16-closure/</guid>
      <description>Anonymus Function Sebelum memahami Closure, ada baiknya kita belajar apa itu anonymus function.
Anonymus function adalah function tanpa nama, anonymus function harus berada didalam function lainnya, tidak dapat menjadi function sendiri.
Berikut contoh anonymus function pada Golang:
func main() { //this is anonymus function func(message string) { fmt.Println(message) }(&amp;#34;This is anonymus function!&amp;#34;) } Berikut hasil eksekusinya: Anonymus function sama saja dengan function biasa, hanya saja tidak memiliki nama. Anonymus function juga langsung dieksekusi setelah di definisikan.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Variadic Function</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/15-variadic-function/</link>
      <pubDate>Mon, 20 Mar 2023 22:24:21 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/15-variadic-function/</guid>
      <description>Variadic Function Function variadic adalah function yang dapat menerima banyak argument sekaligus. Bukan berarti kita harus mendefine banyak parameter juga, dalam variadic function kita cukup mendefinisikan 1 parameter tapi saat definisi parameter kita harus menambahkan dengan symbol variadic ... sebelum tipe data.
Berikut contohnya:
func sum(nums ...int) int { return -1 } Pemakaian parameter Variadic function Cara pemakaian parameter variadic sama dengan array, jadi secara tidak langsung parameter nums dicontoh atas, adalah array of integer</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Function</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/14-function/</link>
      <pubDate>Tue, 14 Mar 2023 22:16:40 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/14-function/</guid>
      <description>Function Function adalah cara kita membuat sebuah blok kode untuk menjalankan tugas secara spesifik. Misal dalam program kita, di butuhkan kode untuk menambahkan 2 angka, daripada kita menulis kodenya berulang2 lebih baik kita membuat fungsinya.
Dalam Go kita dapat membuat function dengan keyword func.
Membuat function pada Golang Berikut contoh pembuatan function pada Go:
func sum(num1 int, num2 int) int { return num1 + num2 } Penjelasan:
sum adalah nama function num1 dan num2 adalah parameter dengan tipe data int yang digunakan di dalam function int setelah tutup kurung, adalah tipe data yang akan di kembalikan function Contoh pemakaian function sum:</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Slice</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/13-slice/</link>
      <pubDate>Fri, 10 Mar 2023 12:20:37 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/13-slice/</guid>
      <description>SLice Slice sama dengan array, untuk menyimpan banyak value di dalam 1 variable. Tapi beda dengan array slice lebih powerful dan flexible dari pada array. Slice dapat menyesuaikan sizenya, sesuai jumlah data, tidak fixed seperti array.
Inisialisasi Slice Dalam Go kita dapat inisialiasi array dengan syntax []data_type{value}, untuk mengakses slice juga sama dengan array kita dapat menggunakan varArray[num_index].
Berikut contoh slice pada Go:
mySlice := []string{&amp;#34;Pisang&amp;#34;, &amp;#34;Anggur&amp;#34;, &amp;#34;Mangga&amp;#34;, &amp;#34;Jeruk&amp;#34;} fmt.Println(mySlice) //[Pisang Anggur Mangga Jeruk] fmt.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Map</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/12-map/</link>
      <pubDate>Mon, 06 Mar 2023 22:41:34 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/12-map/</guid>
      <description>Map Map adalah key-value data struktur, mungkin di bahasa pemrograman lain orang biasa memanggilnya hash map atau dictionary
Dalam golang kita dapat menginisialisasi map kosong dengan keyword make(map[key-type]val-type)
Kita juga dapat sekaligus menyimpan banyak value dalam sebuah map. Kita dapat menyimpan value baru di map dengan syntax mapVar[new-key] = new-val.
Berikut contoh kode penerapan map pada Golang:
nilaiMurid := make(map[string]int) nilaiMurid[&amp;#34;Fauzan&amp;#34;] = 89 nilaiMurid[&amp;#34;Adhika&amp;#34;] = 90 nilaiMurid[&amp;#34;Budi&amp;#34;] = 100 fmt.Println(nilaiMurid) //map[Adhika:90 Budi:100 Fauzan:89] Inisialisasi Map sekaligus dengan valuenya Dalam golang kita juga dapat menginisialisasi Map sekaligus valuenya</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Array</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/11-array/</link>
      <pubDate>Sun, 05 Mar 2023 15:47:57 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/11-array/</guid>
      <description>Array Array adalah data struktur paling sederhana dalam pemrograman, array berguna untuk menyimpan banyak data sekaligus, tapi hanya dapat menyimpan 1 jenis tipe data.
Jadi kita hanya bisa menyimpan 1 tipe data dalam sebuah array. Setiap element dalam array juga memiliki index, yang menandakan dimana posisi element itu berada.
Index juga berguna untuk mengambil value dalam sebuah array dengan menggunakan keyword array[num_of_index], misal dengan contoh array di atas array[3] mengembalikan string dengan value Asep</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Perulangan</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/10-perulangan/</link>
      <pubDate>Sat, 04 Mar 2023 15:17:37 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/10-perulangan/</guid>
      <description>Perulangan Perulangan pada pemrograman berarti, mengeksekusi blok kode tanpa heti, kecuali kondisi yang diajukan sebagai acuan terpenuhi. Pada perulangan biasanya ada variable dan kondisi, dan jika kondisinya terpenuhi maka perulangan akan berakhir.
Sebagai contoh, jika kita ingin print sebuah string sebanyak 50x, kita hanya perlu melakukan perulangan, dibanding kita menulis kode fmt.Println() sebanyak 50x.
Pada golang perulangan hanya dapat memakai syntax for, tapi itu cukup mengcakup fungsi perulangan di bahasa pemrograman lain seperti while dan foreach.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Kondisi</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/09-kondisi/</link>
      <pubDate>Wed, 01 Mar 2023 22:06:06 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/09-kondisi/</guid>
      <description>Kondisi Kondisi pada pemrograman di gunakan untuk mengatur flow dari sebuah program, sama saja dengan pengambilan keputusan pada dunia nyata, misalnya saat kita puasa kita di perbolehkan makan setelah jam tertentu, nah jam tertentu inilah sebuah kondisi yang menentukan kita boleh makan atau tidak. Sama juga dengan pengambilan keputusan pada sebuah program, sebuah kode dieksekusi ketika kondisi yang diberikan terpenuhi. Ini biasa juga di sebut sebagai Control flow statements.
Go mempunyai 2 macam keyword untuk memilih kondisi, yakni:</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Operator</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/08-operator/</link>
      <pubDate>Mon, 27 Feb 2023 01:22:24 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/08-operator/</guid>
      <description>Operator Dalam istilah komputer, operator adalah sebuah simbol yang melakukan operasi pada value atau variable.
Contohnya operator &amp;#43; melakukan pertambahan pada 2 value
Go menyediakan berbagai operator yang dapat kita kategorikan sebagai berikut:
Operator Aritmatika Operator Perbandingan Operator Logika Operator Aritmatika Operator Aritmatika digunakan untuk melakukan operasi bilangan seperti penambahan, pengurangan, perkalian, pembagian, dsb
Berikut table operator aritmatika pada Go:
Operator Deskripsi + (Addition) Pertambahan - (Subtraction) Pengurangan * (Multiplication) Perkalian / (Division) Pembagian % (Modulo Division) Sisa Bagi Berikut contoh kodenya:</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Konstanta</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/07-konstanta/</link>
      <pubDate>Sat, 25 Feb 2023 01:47:38 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/07-konstanta/</guid>
      <description>Konstanta Konstanta adalah nilai tetap yang tidak bisa diubah, itu menurut wikipedia ya hehe.
Cara mendeklarasi konstanta (selanjutnya akan di sebut sebagai const) pada golang sama dengan deklarasi variable tapi dengan keyword const
Const dapat di deklarasi dengan beberapa tipe data seperti char, string, boolean dan numerin (integer dan float)
Const harus di declare sebelum program jalan, contoh program dibawah adalah deklarasi const setelah program jalan yang akan menghasilkan error</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Komentar</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/06-komentar/</link>
      <pubDate>Sat, 25 Feb 2023 00:59:12 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/06-komentar/</guid>
      <description>Komentar Hampir semua bahasa pemrograman memiliki sintaks untuk menambahkan komentar ke kode, dan tentu saja Go juga mempunyainya. Komentar adalah baris dalam program yang menjelaskan dalam bahasa manusia bagaimana kode bekerja atau mengapa ditulis seperti itu.
Komentar itu diabaikan oleh kompiler, compiler tidak akan mengkompile komentar. Komentar menambahkan informarsi berharga yang membantu kolaborator / programmer lain atau diri kita di masa depan untuk memahami kode biar kode lebih mudah di kelola dan maintain.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Tipe Data</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/05-tipe-data/</link>
      <pubDate>Wed, 22 Feb 2023 22:34:54 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/05-tipe-data/</guid>
      <description>Tipe Data Tipe data adalah cara kita mengklasifikasikan jenis variable, karna dengan tipe data kita memberi tahu komputer jenis data yang digunakan untuk sebuah variable, Go mempunyai 3 tipe data dasar:
bool: merepresentasikan bilai boolean, nilainya hanya aja 2, antara true atau false Numeric: merepresentasikan nilai dalam bentuk angka, yaitu integer, dan juga float (untuk decimal) string: merepresentasikan nilai dalam bentuk string string itu bisa dibilan text biasa dengan ciri ada titik 2 di awal dan di akhir seperti ini &amp;quot;ini string&amp;quot; boolean Tipe data boolean dapat di deklarasi dengan syntax bool tipe boolean ini hanya bisa menerima 2 nilai true atau false, dan setiap kita inisiali variable boolean defaultnya adalah false</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Variable</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/04-variable/</link>
      <pubDate>Mon, 20 Feb 2023 21:17:19 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/04-variable/</guid>
      <description>Variable Dalam go ada beberapa cara untuk deklarasi variable, ada yang memakai tipe datanya, ada juga yang tidak.
Deklarasi dengan tipe data Dalam go kita bisa deklasari variable dengan keyword var, dengan format seperti ini var &amp;lt;nama_variable&amp;gt; &amp;lt;tipe_data&amp;gt; dan, berikut contoh kodenya:
package main import &amp;#34;fmt&amp;#34; func main() { var murid string murid = &amp;#34;Budi&amp;#34; fmt.Println(murid) } Dan ini hasilnya ketika program dijalankan: Deklarasi variable dengan tipe data juga bisa sekaligus loh, seperti ini</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Hello World!</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/03-hello-world-golang/</link>
      <pubDate>Sun, 19 Feb 2023 22:01:03 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/03-hello-world-golang/</guid>
      <description>Hello World! Siapa yang ga tau dengan Hello World! hello world adalah langkah pertama setiap kita belajar bahasa pemrograman, dan di tutorial kali ini kita akan belajar bagaimana membuat Hello World! di golang.
Pertama, kita buka project belajar-golang yang sebelumnya kita buat, lalu buat file baru dengan nama main.go, main.go ini biasanya adalah file utama dari project golang.
Setelah itu kita tulis kode seperti berikut: package main import &amp;#34;fmt&amp;#34; func main() { fmt.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Setup Code Editor</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/02-instalasi-editor/</link>
      <pubDate>Sat, 18 Feb 2023 14:05:37 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/02-instalasi-editor/</guid>
      <description>Instalasi Editor Kita bisa pakai Visual Studio Code sebagai code editor, memiliki fitur lengkap, dan juga cukup mudah digunakan. VScode juga memiliki extention yang mendukung bahasa pemrograman Go.
Kita bisa mendownloadnya disini https://code.visualstudio.com/ Kita install seperti biasa.
Lalu bisa buka project belajar-golang yang sebelumnya kita buat Ekstetion yang perlu di install Install juga extention golang untuk membantu kita dalam membuat project Go, dengan menginstall extention golang, banyak fitur-fitur yang dapat membantu kita seperti trace error, syntax highlighting, go to definition, code completion, dan masih banyak lagi bisa buka disini untuk lebih lengkapnya https://github.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Setup Go Module</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/01-setup-go-module/</link>
      <pubDate>Sat, 18 Feb 2023 13:28:53 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/01-setup-go-module/</guid>
      <description>Apa itu Go module? Go modules atau go.mod adalah dependency managernya golang, bila bahasa pemrograman lain seperti php punya composer, javascript punya npm, golang punya go module.
Setup Go Project dengan go module Pertama kita bisa membuat folder baru untuk project Go baru
Untuk initialisasi go mod kita bisa jalankan syntax
go mod init &amp;lt;nama_project&amp;gt;
nah seperti kalian lihat, file go.mod terbuat secara otomatis, sekarang kita sudah siap untuk membuat aplikasi dengan Go.</description>
    </item>
    
    <item>
      <title>Tutorial Golang: Cara Instalasi Golang</title>
      <link>https://sekolahbackend.web.app/id/blog/golang/00-instalasi-golang/</link>
      <pubDate>Thu, 16 Feb 2023 21:28:52 +0700</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/blog/golang/00-instalasi-golang/</guid>
      <description>Sejarah Golang: Golang adalah bahasa pemrograman yang dibuat di Google pada tahun 2009 oleh Robert Griesemer, Rob Pike, dan Ken Thompson.
Golang sangat terkenal karena bahasanya mudah di pahami, dinamis dan mudah untuk integrasi dengan bahasa lain, dengan begitu golang sangat cocok untuk mengembangkan aplikasi dengan traffic tinggi.
Berikut cara instalasi golang: Download file binary di https://go.dev/dl/ berdasarkan sistem operasi kalian. Buka file binary yang sudah terdownload, lalu kalian bisa klik continue dan ikuti step seperti install aplikasi pada umumnya.</description>
    </item>
    
    <item>
      <title>Tentang Sekolah Backend</title>
      <link>https://sekolahbackend.web.app/id/page/about/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sekolahbackend.web.app/id/page/about/</guid>
      <description>Comming Soon</description>
    </item>
    
  </channel>
</rss>
