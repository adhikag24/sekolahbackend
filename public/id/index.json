
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"author":"Adhika Guna","categories":null,"contents":"Cluster pada Kafka Cluster Kafka adalah sekelompok server (broker) yang bekerja sama untuk membuat sistem terdistribusi untuk menangani dan mengelola streaming data. Ini bertindak sebagai infrastruktur yang kuat (high availability) dan ketahanan (fault tolerance), berfungsi untuk memproses dan menyimpan data secara real-time.\nSebuah cluster terdiri dari satu atau lebih broker yang berkolaborasi untuk melakukan tugasnya.\nBroker pada Kafka Broker adalah instance atau server tunggal dalam sebuah cluster Kafka.\nBroker bertanggung jawab untuk menerima, menyimpan, dan melayani streaming data.","date":"2023-06-26T20:24:17+07:00","permalink":"https://sekolahbackend.com/id/blog/kafka/cluster-broker/","tags":null,"title":"Tutorial Kafka: Cluster dan Broker"},{"author":"Adhika Guna","categories":null,"contents":"Dalam Apache Kafka, terdapat dua konsep yang menjadi dasar dari sistem streaming ini, yaitu partition dan topic.\nPartisi dan topik memainkan peran penting dalam mengorganize dan menyimpan data stream secara real-time.\nPartition dalam Kafka Partition adalah unit dasar penyimpanan dan replikasi data dalam sebuah topic di Kafka.\nSetiap topik dalam Kafka terdiri dari satu atau lebih partition yang menyimpan urutan pesan. Setiap pesan yang dikirimkan ke topik akan di-assign secara otomatis ke salah satu partition.","date":"2023-06-23T22:41:26+07:00","permalink":"https://sekolahbackend.com/id/blog/kafka/03-topic-partition/","tags":null,"title":"Tutorial Kafka: Partition dan Topic"},{"author":"Adhika Guna","categories":null,"contents":"Instalasi Kafka Ada banyak cara untuk instalasi kafka, melalui Docker, Cloud Provider, atau install langsung dari websitenya. Biasanya jika lewat Docker instalasi akan mudah karena semua sudah disediakan oleh Docker.\nTapi di artikel ini kita akan mencoba install kafka langsung melalui websitenya dan menjalankan kafka pada laptop / komputer kita.\nLangkah 1: Requirement Requirement untuk menginstall kafka adalah memiliki Java Development Kit (JDK) versi 8 atau yang lebih baru, saya sarankan install yang dibawa versi 15.","date":"2023-06-21T22:22:39+07:00","permalink":"https://sekolahbackend.com/id/blog/kafka/02-instalasi-kafka/","tags":null,"title":"Tutorial Kafka: Instalasi Kafka"},{"author":"Adhika Guna","categories":null,"contents":"Terminologi pada Kafka Kafka memiliki konsep dan terminologi khusus yang penting untuk dipahami agar dapat menggunakan tool ini secara efektif.\nBerikut beberapa key concept dan terminologi dalam Kafka beserta penjelasannya.\nTopic Topic dalam Kafka adalah saluran yang digunakan untuk mengorganisir dan mengelompokkan aliran data.\nSetiap pesan yang dikirim ke Kafka dikategorikan ke dalam topik tertentu. Misalnya, jika kita memiliki topik dengan nama sensor-data semua pesan sensor akan dikirim ke topik tersebut.","date":"2023-06-18T22:29:58+07:00","permalink":"https://sekolahbackend.com/id/blog/kafka/01-terminology-kafka/","tags":null,"title":"Tutorial Kafka: Konsep dan Terminologi pada Kafka"},{"author":"Adhika Guna","categories":null,"contents":"Apa itu Apache Kafka? Apache Kafka adalah platform pengiriman pesan yang didistribusikan dan scalable yang dirancang untuk mengatasi tantangan pengiriman pesan dalam skala besar dan pengolahan data real-time.\nApache Kafka adalah proyek open-source yang pertama kali dikembangkan oleh LinkedIn dan kemudian disumbangkan ke Apache Software Foundation.\nKafka dirancang untuk mengatasi data stream dan pesan secara real-time antara aplikasi dan sistem yang terdistribusi / biasa kita sebut microservice.\nArsitektur Kafka Kafka memiliki arsitektur yang terdiri dari beberapa komponen utama.","date":"2023-06-15T20:49:33+07:00","permalink":"https://sekolahbackend.com/id/blog/kafka/00-seputar-kafka/","tags":null,"title":"Tutorial Kafka: Pengenalan Kafka"},{"author":"Adhika Guna","categories":null,"contents":"Unit Testing Unit testing adalah proses pengujian perangkat lunak yang fokus pada pengujian unit-unit terkecil dari sebuah program, seperti fungsi atau metode. Dalam bahasa pemrograman Golang, unit testing sangat didukung dan telah disediakan oleh testing package bawaan. Dalam panduan ini, kita akan membahas cara melakukan unit testing di Golang menggunakan testing package.\nMembuat Test Misalnya kita punya fungsi Add yang kita ingin buatkan testnya.\nBerikut kode fungsi Add:\nfunc Add(num1, num2 int) int{ return num1 + num2 } Mari kita buat testnya.","date":"2023-06-11T23:23:35+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/35-test/","tags":null,"title":"Tutorial Golang: Unit Test"},{"author":"Adhika Guna","categories":null,"contents":"Mutex Mutex (Mutual Exclusion) adalah sebuah mekanisme yang digunakan dalam pemrograman untuk mengontrol akses ke sumber daya bersama (shared resource) yang digunakan oleh dua atau lebih thread secara bersamaan.\nDalam sebuah program yang menggunakan thread, Mutex memastikan bahwa hanya satu thread yang dapat mengakses sumber daya bersama pada suatu waktu. Saat satu thread mendapatkan akses ke sumber daya bersama, Mutex akan mengunci (lock) sumber daya tersebut, sehingga thread lain harus menunggu sampai sumber daya tersebut dilepaskan (unlock) sebelum dapat mengaksesnya.","date":"2023-04-25T22:55:11+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/34-mutex/","tags":null,"title":"Tutorial Golang: Mutex"},{"author":"Adhika Guna","categories":null,"contents":"WaitGroup WaitGroup berasal dari package sync di Golang.\nsync adalah package yang berisi fitur-fitur sinkronisasi untuk mengatur akses ke data yang bersamaan di antara goroutine.\nWaitGroup adalah salah satu fitur di Golang yang berguna untuk menunggu beberapa goroutine selesai sebelum melanjutkan eksekusi program.\nWaitGroup memungkinkan kita untuk menambahkan goroutine ke dalam grup dan menunggu sampai semua goroutine selesai dijalankan sebelum melanjutkan eksekusi.\nPengunaan WaitGroup pada Go Berikut adalah contoh penggunaan WaitGroup pada Go:","date":"2023-04-24T15:50:20+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/33-waitgroup/","tags":null,"title":"Tutorial Golang: WaitGroup"},{"author":"Adhika Guna","categories":null,"contents":"Regex Regex atau Regular Expression adalah sebuah teks yang berisi pola yang digunakan untuk mencocokkan teks lainnya. Dalam bahasa pemrograman, penggunaan regex dapat membantu dalam mencari atau memproses sebuah string secara spesifik.\nContohnya, kita dapat menggunakan regex untuk mencocokkan sebuah email, nomor telepon, atau mencari sebuah kata dalam sebuah dokumen.\nPola regex terdiri dari karakter-karakter atau meta-karakter yang memiliki arti spesifik, seperti huruf, angka, karakter spesial, tanda kurung, tanda kurung siku, tanda kurung kurawal, dan sebagainya.","date":"2023-04-21T22:13:07+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/32-regex/","tags":null,"title":"Tutorial Golang: Regex"},{"author":"Adhika Guna","categories":null,"contents":"JSON JSON atau singkatan dari JavaScript Object Notation adalah format data ringan yang biasa digunakan untuk pertukaran data antara aplikasi.\nJSON sangat populer karena sifatnya yang mudah dipahami oleh manusia dan juga mudah diinterpretasikan oleh mesin.\nJSON berbasis teks dan terdiri dari pasangan key-value dan sering disebut sebagai objek.\nSebagai contoh, inilah sebuah objek JSON yang merepresentasikan seorang siswa:\n{ \u0026#34;name\u0026#34;: \u0026#34;John Doe\u0026#34;, \u0026#34;age\u0026#34;: 20, \u0026#34;address\u0026#34;: { \u0026#34;street\u0026#34;: \u0026#34;123 Main St\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;New York\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;NY\u0026#34; }, \u0026#34;courses\u0026#34;: [\u0026#34;Math\u0026#34;, \u0026#34;Science\u0026#34;, \u0026#34;History\u0026#34;] } JSON dalam Go Dalam Go, penggunaan JSON juga sangat umum karena sifatnya yang mudah digunakan dan cepat.","date":"2023-04-20T23:40:21+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/31-json/","tags":null,"title":"Tutorial Golang: JSON"},{"author":"Adhika Guna","categories":null,"contents":"Time Golang memiliki built-in package bernama time yang berguna untuk memanipulasi waktu dan tanggal.\nPaket ini memiliki berbagai macam fungsi dan metode untuk mengambil waktu saat ini, mengonversi waktu antara zona waktu yang berbeda, menghitung durasi, dan banyak lagi.\ntime.Now() Package time memiliki banyak method terkait waktu dan tanggal, kita mulai dengan time.Now(), dengan time.Now() kita dapat mengambil waktu saat ini.\nBerikut contoh kodenya:\nfunc main() { now := time.Now() fmt.","date":"2023-04-19T22:36:31+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/30-time/","tags":null,"title":"Tutorial Golang: Package Time"},{"author":"Adhika Guna","categories":null,"contents":"Format String Format string merupakan salah satu fitur yang penting di dalam bahasa pemrograman Golang. Format string digunakan untuk memformat tampilan output yang dihasilkan oleh program Golang. Dalam Golang, format string diwakili oleh package \u0026ldquo;fmt\u0026rdquo;.\nFormat string di Golang menggunakan placeholder yang diawali dengan karakter \u0026ldquo;%\u0026rdquo; dan diikuti oleh tipe data yang akan ditampilkan.\nContoh Penggunaan Format String Berikut adalah beberapa contoh penggunaan format string di Golang:\nMenampilkan nilai integer: func main() { var x int = 42 fmt.","date":"2023-04-17T16:38:27+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/29-layout-string/","tags":null,"title":"Tutorial Golang: Format String"},{"author":"Adhika Guna","categories":null,"contents":"Intro Di tulisan kali ini, kita akan belajar apa itu Defer, Panic dan Recover pada Golang.\n3 fitur ini adalah fitur yang jarang dimiliki oleh bahasa pemrograman lain.\nDefer Mekanisme defer digunakan untuk menunda eksekusi suatu pernyataan atau fungsi sampai fungsi yang memanggilnya selesai dieksekusi.\nPernyataan defer dijalankan bahkan jika terjadi kesalahan atau panic pada fungsi yang memanggilnya.\nUntuk menggunakan fitur defer, kita dapat menggunakan statement defer.\nBerikut contoh penggunaan defer pada Go:","date":"2023-04-16T13:22:30+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/28-defer-panic-recover/","tags":null,"title":"Tutorial Golang: Defer, Panic and Recover"},{"author":"Adhika Guna","categories":null,"contents":"Intro Dalam tulisan sebelumnya kita sudah belajar mengenai Channel dan Buffered Channel, dalam tulisan kali ini kita akan belajar beberapa fitur channel yang dapat kita gunakan seperti:\nSelect Range \u0026amp; Close Timeout Select Select memungkinkan kita untuk melakukan operasi pada beberapa channel secara bersamaan dalam program Golang kita.\nUntuk melakukan ini, Golang menyediakan statement select yang memungkinkan kita untuk menunggu operasi pada beberapa channel sekaligus.\nPertama, kita mendefinisikan beberapa channel yang ingin kita operasikan menggunakan statement make.","date":"2023-04-15T11:07:38+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/27-channel-advance/","tags":null,"title":"Tutorial Golang: Channel - Advance"},{"author":"Adhika Guna","categories":null,"contents":"Buffered Channel Pada tulisan sebelumnya kita sudah belajar apa itu channel, dan bagaimana menggunakannya, dan di tulisan ini kita akan belajar apa itu Buffered Channel.\nBuffered channel adalah jenis channel yang memiliki kapasitas tertentu untuk menampung data.\nPada dasarnya, buffered channel adalah jenis channel yang memungkinkan goroutine untuk mengirim data ke channel tanpa harus menunggu goroutine lainnya untuk menerima data dari channel tersebut.\nKetika buffered channel telah mencapai kapasitas maksimumnya, goroutine yang mencoba mengirim data ke channel akan diblokir hingga ada goroutine lain yang mengambil data dari channel tersebut.","date":"2023-04-13T20:08:53+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/26-buffered-channel/","tags":null,"title":"Tutorial Golang: Buffered Channel"},{"author":"Adhika Guna","categories":null,"contents":"Channel Channel adalah fitur bawaan dalam Golang yang memungkinkan untuk komunikasi antara goroutine yang berbeda.\nChannel dapat dianggap sebagai saluran pipa tempat nilai dapat mengalir antara goroutine yang berbeda.\nSatu goroutine dapat mengirim nilai ke dalam channel, sedangkan goroutine lainnya dapat menerima nilai tersebut dari channel.\nChannel juga berguna untuk sinkronisasi, memungkinkan satu goroutine untuk menunggu hingga goroutine lain menyelesaikan tugas tertentu.\nInisialisasi Channel Dalam Golang, channel didefinisikan menggunakan kata kunci chan , diikuti oleh tipe nilai yang akan dibawa oleh channel.","date":"2023-04-11T23:12:00+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/25-channel/","tags":null,"title":"Tutorial Golang: Channel"},{"author":"Adhika Guna","categories":null,"contents":"Goroutine Goroutine adalah fitur dalam bahasa pemrograman Go yang dapat membuat sebuah tugas ringan (lightweight task) atau proses kecil yang berjalan secara independen di dalam aplikasi.\nDalam bahasa lain, Goroutine dapat diartikan sebagai sebuah bentuk konkurensi (concurrency) / asynchronous di mana tugas-tugas kecil atau proses-proses kecil dapat dijalankan secara bersamaan tanpa mengganggu satu sama lain.\nGoroutine menggunakan thread sebagai sarana untuk menjalankan proses kecil tersebut.\nTapi, perlu diketahui bahwa Goroutine tidak sama dengan thread pada umumnya.","date":"2023-04-10T19:52:42+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/24-goroutine/","tags":null,"title":"Tutorial Golang: Goroutine"},{"author":"Adhika Guna","categories":null,"contents":"Reflect Reflect merupakan package bawaan dari Go yang digunakan untuk mengakses dan memanipulasi informasi pada saat runtime.\nDalam Go informasi seperti tipe data, nama fungsi, dan struktur data tersedia pada saat kompilasi.\nNamun, pada saat runtime, kita seringkali memerlukan akses ke informasi ini untuk membuat kode yang dinamis dan fleksibel.\nHal ini dimungkinkan dengan adanya package reflect.\nFungsi Package Reflect Package reflect menyediakan beberapa fungsi dan struktur data yang dapat digunakan untuk membaca informasi tipe data dan nilai pada saat runtime.","date":"2023-04-06T23:41:42+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/23-reflect/","tags":null,"title":"Tutorial Golang: Package Reflect"},{"author":"Adhika Guna","categories":null,"contents":"Interface kosong Salah satu fitur yang menarik di Golang adalah penggunaan empty interface.\ninterface{} Empty interface atau interface kosong, dapat digunakan untuk mewakili nilai apa pun di Golang.\nEmpty interface tidak memiliki method yang didefinisikan di dalamnya. Ini berarti empty interface tidak memiliki aturan apapun terkait dengan struktur atau nilai yang akan diterima.\nEmpty interface dapat merepresentasikan nilai apa pun, bahkan objek dari tipe data yang berbeda.\nPenggunaan Empty Interface Berikut contoh penggunaan Empty Interface","date":"2023-04-05T21:34:05+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/22-empty-interface/","tags":null,"title":"Tutorial Golang: Interface Kosong"},{"author":"Adhika Guna","categories":null,"contents":"Interface Interface adalah salah satu fitur penting yang ada di bahasa pemrograman Go (Golang). Interface membantu developer dalam membuat kode yang fleksibel dan mudah di-maintain.\nInterface adalah kumpulan definisi method tanpa implementasi yang digunakan sebagai template untuk mengimplementasikan fungsi yang berbeda-beda dari satu tipe data.\nArtinya, interface memberikan sebuah blueprint tentang fungsi apa yang harus diimplementasikan oleh suatu tipe data yang memenuhi syarat-syarat yang telah ditentukan oleh interface.\nSetiap tipe yang memenuhi semua metode dalam sebuah interface dianggap sebagai implementasi dari interface tersebut.","date":"2023-04-03T22:05:12+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/21-interface/","tags":null,"title":"Tutorial Golang: Interface"},{"author":"Adhika Guna","categories":null,"contents":"Package Sebelum belajar apa itu Public dan Private pada Go, ada baiknya kita memahami apa itu Package pada golang.\nDi Go, package adalah cara untuk mengatur file source kode Go agar saling terikat.\nSetiap program Go terdiri dari satu atau lebih package, dengan satu paket ditetapkan sebagai package utama.\nPackage utama adalah pintu masuk program dan berisi fungsi main() yang dijalankan pertama kali saat program dijalankan.\nSebuah package juga dapat digunakan oleh package lain dengan mengimpornya.","date":"2023-03-30T20:55:34+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/20-export-unexport/","tags":null,"title":"Tutorial Golang: Public and Private"},{"author":"Adhika Guna","categories":null,"contents":"Method Dalam Go, method sama dengan function, bedanya method memiliki receiver dan hanya dapat dipanggil melalui object / receivernya.\nBerikut contoh syntax untuk membuat method pada Go:\nfunc (r Receiver) namaFunc(arg int) string { return \u0026#34;\u0026#34; } Lalu untuk memanggilnya, kita dapat melakukan seperti ini:\nresult := r.namaFunc(arg) Receiver Receiver ini bisa dibilang pemilik dari sebuah method, ketika method dipanggil method akan memiliki nilai dari receivernya.\nBegini contohnya:\ntype Murid struct { nama string kelas string umur int } func (m Murid) getNama() string { return m.","date":"2023-03-28T15:42:33+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/19-method/","tags":null,"title":"Tutorial Golang: Method"},{"author":"Adhika Guna","categories":null,"contents":"Struct Struct pada golang bisa dibilang sama dengan class pada bahasa pemrograman lain.\nStruct berguna untuk mengelompokkan data bersama untuk membentuk kelompok data yang baru.\nInisialiasi struct Untuk inisialisasi struct, cukup dengan type Murid struct{}. Dengan berikut kita sudah membuat struct kosong bernama Murid.\nBerikut contoh inisialisasi struct pada Golang:\ntype Murid struct { nama string kelas string umur int } Contoh diatas kita berhasil membuat struct Murid dengan attribute nama, kelas dan umur.","date":"2023-03-27T14:45:37+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/18-struct/","tags":null,"title":"Tutorial Golang: Struct"},{"author":"Adhika Guna","categories":null,"contents":"Pointer Bahasa pemrograman Go memiliki pointer, mungkin buat yang pernah belajar bahasa C dan C++ ga asing lagi ya dengan namanya pointer.\nPointer itu fungsinya untuk menampung memory address dari sebuah value / variable.\nVariable dan Pointer itu 2 hal yang berbeda, walau cara deklarasinya mirip.\nKeuntungan pointer kita dapat menyimpan value nil\nInisialisasi Pointer Cara inisialisasi pointer sama dengan inisialisasi variable pada umumnya, hanya saja untuk pointer ditandai dengan symbol * sebelum penulisan tipe data.","date":"2023-03-26T15:24:31+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/17-pointer/","tags":null,"title":"Tutorial Golang: Pointer"},{"author":"Adhika Guna","categories":null,"contents":"Anonymus Function Sebelum memahami Closure, ada baiknya kita belajar apa itu anonymus function.\nAnonymus function adalah function tanpa nama, anonymus function harus berada didalam function lainnya, tidak dapat menjadi function sendiri.\nBerikut contoh anonymus function pada Golang:\nfunc main() { //this is anonymus function func(message string) { fmt.Println(message) }(\u0026#34;This is anonymus function!\u0026#34;) } Berikut hasil eksekusinya: Anonymus function sama saja dengan function biasa, hanya saja tidak memiliki nama. Anonymus function juga langsung dieksekusi setelah di definisikan.","date":"2023-03-24T16:37:28+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/16-closure/","tags":null,"title":"Tutorial Golang: Closure"},{"author":"Adhika Guna","categories":null,"contents":"Variadic Function Function variadic adalah function yang dapat menerima banyak argument sekaligus. Bukan berarti kita harus mendefine banyak parameter juga, dalam variadic function kita cukup mendefinisikan 1 parameter tapi saat definisi parameter kita harus menambahkan dengan symbol variadic ... sebelum tipe data.\nBerikut contohnya:\nfunc sum(nums ...int) int { return -1 } Pemakaian parameter Variadic function Cara pemakaian parameter variadic sama dengan array, jadi secara tidak langsung parameter nums dicontoh atas, adalah array of integer","date":"2023-03-20T22:24:21+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/15-variadic-function/","tags":null,"title":"Tutorial Golang: Variadic Function"},{"author":"Adhika Guna","categories":null,"contents":"Function Function adalah cara kita membuat sebuah blok kode untuk menjalankan tugas secara spesifik. Misal dalam program kita, di butuhkan kode untuk menambahkan 2 angka, daripada kita menulis kodenya berulang2 lebih baik kita membuat fungsinya.\nDalam Go kita dapat membuat function dengan keyword func.\nMembuat function pada Golang Berikut contoh pembuatan function pada Go:\nfunc sum(num1 int, num2 int) int { return num1 + num2 } Penjelasan:\nsum adalah nama function num1 dan num2 adalah parameter dengan tipe data int yang digunakan di dalam function int setelah tutup kurung, adalah tipe data yang akan di kembalikan function Contoh pemakaian function sum:","date":"2023-03-14T22:16:40+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/14-function/","tags":null,"title":"Tutorial Golang: Function"},{"author":"Adhika Guna","categories":null,"contents":"SLice Slice sama dengan array, untuk menyimpan banyak value di dalam 1 variable. Tapi beda dengan array slice lebih powerful dan flexible dari pada array. Slice dapat menyesuaikan sizenya, sesuai jumlah data, tidak fixed seperti array.\nInisialisasi Slice Dalam Go kita dapat inisialiasi array dengan syntax []data_type{value}, untuk mengakses slice juga sama dengan array kita dapat menggunakan varArray[num_index].\nBerikut contoh slice pada Go:\nmySlice := []string{\u0026#34;Pisang\u0026#34;, \u0026#34;Anggur\u0026#34;, \u0026#34;Mangga\u0026#34;, \u0026#34;Jeruk\u0026#34;} fmt.Println(mySlice) //[Pisang Anggur Mangga Jeruk] fmt.","date":"2023-03-10T12:20:37+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/13-slice/","tags":null,"title":"Tutorial Golang: Slice"},{"author":"Adhika Guna","categories":null,"contents":"Map Map adalah key-value data struktur, mungkin di bahasa pemrograman lain orang biasa memanggilnya hash map atau dictionary\nDalam golang kita dapat menginisialisasi map kosong dengan keyword make(map[key-type]val-type)\nKita juga dapat sekaligus menyimpan banyak value dalam sebuah map. Kita dapat menyimpan value baru di map dengan syntax mapVar[new-key] = new-val.\nBerikut contoh kode penerapan map pada Golang:\nnilaiMurid := make(map[string]int) nilaiMurid[\u0026#34;Fauzan\u0026#34;] = 89 nilaiMurid[\u0026#34;Adhika\u0026#34;] = 90 nilaiMurid[\u0026#34;Budi\u0026#34;] = 100 fmt.Println(nilaiMurid) //map[Adhika:90 Budi:100 Fauzan:89] Inisialisasi Map sekaligus dengan valuenya Dalam golang kita juga dapat menginisialisasi Map sekaligus valuenya","date":"2023-03-06T22:41:34+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/12-map/","tags":null,"title":"Tutorial Golang: Map"},{"author":"Adhika Guna","categories":null,"contents":"Array Array adalah data struktur paling sederhana dalam pemrograman, array berguna untuk menyimpan banyak data sekaligus, tapi hanya dapat menyimpan 1 jenis tipe data.\nJadi kita hanya bisa menyimpan 1 tipe data dalam sebuah array. Setiap element dalam array juga memiliki index, yang menandakan dimana posisi element itu berada.\nIndex juga berguna untuk mengambil value dalam sebuah array dengan menggunakan keyword array[num_of_index], misal dengan contoh array di atas array[3] mengembalikan string dengan value Asep","date":"2023-03-05T15:47:57+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/11-array/","tags":null,"title":"Tutorial Golang: Array"},{"author":"Adhika Guna","categories":null,"contents":"Perulangan Perulangan pada pemrograman berarti, mengeksekusi blok kode tanpa heti, kecuali kondisi yang diajukan sebagai acuan terpenuhi. Pada perulangan biasanya ada variable dan kondisi, dan jika kondisinya terpenuhi maka perulangan akan berakhir.\nSebagai contoh, jika kita ingin print sebuah string sebanyak 50x, kita hanya perlu melakukan perulangan, dibanding kita menulis kode fmt.Println() sebanyak 50x.\nPada golang perulangan hanya dapat memakai syntax for, tapi itu cukup mengcakup fungsi perulangan di bahasa pemrograman lain seperti while dan foreach.","date":"2023-03-04T15:17:37+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/10-perulangan/","tags":null,"title":"Tutorial Golang: Perulangan"},{"author":"Adhika Guna","categories":null,"contents":"Kondisi Kondisi pada pemrograman di gunakan untuk mengatur flow dari sebuah program, sama saja dengan pengambilan keputusan pada dunia nyata, misalnya saat kita puasa kita di perbolehkan makan setelah jam tertentu, nah jam tertentu inilah sebuah kondisi yang menentukan kita boleh makan atau tidak. Sama juga dengan pengambilan keputusan pada sebuah program, sebuah kode dieksekusi ketika kondisi yang diberikan terpenuhi. Ini biasa juga di sebut sebagai Control flow statements.\nGo mempunyai 2 macam keyword untuk memilih kondisi, yakni:","date":"2023-03-01T22:06:06+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/09-kondisi/","tags":["golang"],"title":"Tutorial Golang: Kondisi"},{"author":"Adhika Guna","categories":null,"contents":"Operator Dalam istilah komputer, operator adalah sebuah simbol yang melakukan operasi pada value atau variable.\nContohnya operator \u0026#43; melakukan pertambahan pada 2 value\nGo menyediakan berbagai operator yang dapat kita kategorikan sebagai berikut:\nOperator Aritmatika Operator Perbandingan Operator Logika Operator Aritmatika Operator Aritmatika digunakan untuk melakukan operasi bilangan seperti penambahan, pengurangan, perkalian, pembagian, dsb\nBerikut table operator aritmatika pada Go:\nOperator Deskripsi + (Addition) Pertambahan - (Subtraction) Pengurangan * (Multiplication) Perkalian / (Division) Pembagian % (Modulo Division) Sisa Bagi Berikut contoh kodenya:","date":"2023-02-27T01:22:24+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/08-operator/","tags":["golang"],"title":"Tutorial Golang: Operator"},{"author":"Adhika Guna","categories":null,"contents":"Konstanta Konstanta adalah nilai tetap yang tidak bisa diubah, itu menurut wikipedia ya hehe.\nCara mendeklarasi konstanta (selanjutnya akan di sebut sebagai const) pada golang sama dengan deklarasi variable tapi dengan keyword const\nConst dapat di deklarasi dengan beberapa tipe data seperti char, string, boolean dan numerin (integer dan float)\nConst harus di declare sebelum program jalan, contoh program dibawah adalah deklarasi const setelah program jalan yang akan menghasilkan error","date":"2023-02-25T01:47:38+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/07-konstanta/","tags":["golang"],"title":"Tutorial Golang: Konstanta"},{"author":"Adhika Guna","categories":null,"contents":"Komentar Hampir semua bahasa pemrograman memiliki sintaks untuk menambahkan komentar ke kode, dan tentu saja Go juga mempunyainya. Komentar adalah baris dalam program yang menjelaskan dalam bahasa manusia bagaimana kode bekerja atau mengapa ditulis seperti itu.\nKomentar itu diabaikan oleh kompiler, compiler tidak akan mengkompile komentar. Komentar menambahkan informarsi berharga yang membantu kolaborator / programmer lain atau diri kita di masa depan untuk memahami kode biar kode lebih mudah di kelola dan maintain.","date":"2023-02-25T00:59:12+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/06-komentar/","tags":["golang"],"title":"Tutorial Golang: Komentar"},{"author":"Adhika Guna","categories":null,"contents":"Tipe Data Tipe data adalah cara kita mengklasifikasikan jenis variable, karna dengan tipe data kita memberi tahu komputer jenis data yang digunakan untuk sebuah variable, Go mempunyai 3 tipe data dasar:\nbool: merepresentasikan bilai boolean, nilainya hanya aja 2, antara true atau false Numeric: merepresentasikan nilai dalam bentuk angka, yaitu integer, dan juga float (untuk decimal) string: merepresentasikan nilai dalam bentuk string string itu bisa dibilan text biasa dengan ciri ada titik 2 di awal dan di akhir seperti ini \u0026quot;ini string\u0026quot; boolean Tipe data boolean dapat di deklarasi dengan syntax bool tipe boolean ini hanya bisa menerima 2 nilai true atau false, dan setiap kita inisiali variable boolean defaultnya adalah false","date":"2023-02-22T22:34:54+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/05-tipe-data/","tags":["golang"],"title":"Tutorial Golang: Tipe Data"},{"author":"Adhika Guna","categories":null,"contents":"Variable Dalam go ada beberapa cara untuk deklarasi variable, ada yang memakai tipe datanya, ada juga yang tidak.\nDeklarasi dengan tipe data Dalam go kita bisa deklasari variable dengan keyword var, dengan format seperti ini var \u0026lt;nama_variable\u0026gt; \u0026lt;tipe_data\u0026gt; dan, berikut contoh kodenya:\npackage main import \u0026#34;fmt\u0026#34; func main() { var murid string murid = \u0026#34;Budi\u0026#34; fmt.Println(murid) } Dan ini hasilnya ketika program dijalankan: Deklarasi variable dengan tipe data juga bisa sekaligus loh, seperti ini","date":"2023-02-20T21:17:19+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/04-variable/","tags":["golang"],"title":"Tutorial Golang: Variable"},{"author":"Adhika Guna","categories":null,"contents":"Hello World! Siapa yang ga tau dengan Hello World! hello world adalah langkah pertama setiap kita belajar bahasa pemrograman, dan di tutorial kali ini kita akan belajar bagaimana membuat Hello World! di golang.\nPertama, kita buka project belajar-golang yang sebelumnya kita buat, lalu buat file baru dengan nama main.go, main.go ini biasanya adalah file utama dari project golang.\nSetelah itu kita tulis kode seperti berikut: package main import \u0026#34;fmt\u0026#34; func main() { fmt.","date":"2023-02-19T22:01:03+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/03-hello-world-golang/","tags":["golang"],"title":"Tutorial Golang: Hello World!"},{"author":"Adhika Guna","categories":null,"contents":"Instalasi Editor Kita bisa pakai Visual Studio Code sebagai code editor, memiliki fitur lengkap, dan juga cukup mudah digunakan. VScode juga memiliki extention yang mendukung bahasa pemrograman Go.\nKita bisa mendownloadnya disini https://code.visualstudio.com/ Kita install seperti biasa.\nLalu bisa buka project belajar-golang yang sebelumnya kita buat Ekstetion yang perlu di install Install juga extention golang untuk membantu kita dalam membuat project Go, dengan menginstall extention golang, banyak fitur-fitur yang dapat membantu kita seperti trace error, syntax highlighting, go to definition, code completion, dan masih banyak lagi bisa buka disini untuk lebih lengkapnya https://github.","date":"2023-02-18T14:05:37+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/02-instalasi-editor/","tags":["golang","code editor"],"title":"Tutorial Golang: Setup Code Editor"},{"author":"Adhika Guna","categories":null,"contents":"Apa itu Go module? Go modules atau go.mod adalah dependency managernya golang, bila bahasa pemrograman lain seperti php punya composer, javascript punya npm, golang punya go module.\nSetup Go Project dengan go module Pertama kita bisa membuat folder baru untuk project Go baru\nUntuk initialisasi go mod kita bisa jalankan syntax\ngo mod init \u0026lt;nama_project\u0026gt;\nnah seperti kalian lihat, file go.mod terbuat secara otomatis, sekarang kita sudah siap untuk membuat aplikasi dengan Go.","date":"2023-02-18T13:28:53+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/01-setup-go-module/","tags":["golang"],"title":"Tutorial Golang: Setup Go Module"},{"author":"Adhika Guna","categories":null,"contents":"Sejarah Golang: Golang adalah bahasa pemrograman yang dibuat di Google pada tahun 2009 oleh Robert Griesemer, Rob Pike, dan Ken Thompson.\nGolang sangat terkenal karena bahasanya mudah di pahami, dinamis dan mudah untuk integrasi dengan bahasa lain, dengan begitu golang sangat cocok untuk mengembangkan aplikasi dengan traffic tinggi.\nBerikut cara instalasi golang: Download file binary di https://go.dev/dl/ berdasarkan sistem operasi kalian. Buka file binary yang sudah terdownload, lalu kalian bisa klik continue dan ikuti step seperti install aplikasi pada umumnya.","date":"2023-02-16T21:28:52+07:00","permalink":"https://sekolahbackend.com/id/blog/golang/00-instalasi-golang/","tags":["golang"],"title":"Tutorial Golang: Cara Instalasi Golang"},{"author":"Katheryn Fox","categories":null,"contents":"Comming Soon","date":"2021-07-15T00:00:00Z","permalink":"https://sekolahbackend.com/id/page/about/","tags":null,"title":"Tentang Sekolah Backend"}]