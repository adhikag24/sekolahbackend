
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"author":"Adhika Guna","categories":null,"contents":"Package Sebelum belajar apa itu Public dan Private pada Go, ada baiknya kita memahami apa itu Package pada golang.\nDi Go, package adalah cara untuk mengatur file source kode Go agar saling terikat.\nSetiap program Go terdiri dari satu atau lebih package, dengan satu paket ditetapkan sebagai package utama.\nPackage utama adalah pintu masuk program dan berisi fungsi main() yang dijalankan pertama kali saat program dijalankan.\nSebuah package juga dapat digunakan oleh package lain dengan mengimpornya.","date":"2023-03-30T20:55:34+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/20-export-unexport/","tags":null,"title":"Tutorial Golang: Public and Private"},{"author":"Adhika Guna","categories":null,"contents":"Method Dalam Go, method sama dengan function, bedanya method memiliki receiver dan hanya dapat dipanggil melalui object / receivernya.\nBerikut contoh syntax untuk membuat method pada Go:\nfunc (r Receiver) namaFunc(arg int) string { return \u0026#34;\u0026#34; } Lalu untuk memanggilnya, kita dapat melakukan seperti ini:\nresult := r.namaFunc(arg) Receiver Receiver ini bisa dibilang pemilik dari sebuah method, ketika method dipanggil method akan memiliki nilai dari receivernya.\nBegini contohnya:\ntype Murid struct { nama string kelas string umur int } func (m Murid) getNama() string { return m.","date":"2023-03-28T15:42:33+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/19-method/","tags":null,"title":"Tutorial Golang: Method"},{"author":"Adhika Guna","categories":null,"contents":"Struct Struct pada golang bisa dibilang sama dengan class pada bahasa pemrograman lain.\nStruct berguna untuk mengelompokkan data bersama untuk membentuk kelompok data yang baru.\nInisialiasi struct Untuk inisialisasi struct, cukup dengan type Murid struct{}. Dengan berikut kita sudah membuat struct kosong bernama Murid.\nBerikut contoh inisialisasi struct pada Golang:\ntype Murid struct { nama string kelas string umur int } Contoh diatas kita berhasil membuat struct Murid dengan attribute nama, kelas dan umur.","date":"2023-03-27T14:45:37+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/18-struct/","tags":null,"title":"Tutorial Golang: Struct"},{"author":"Adhika Guna","categories":null,"contents":"Pointer Bahasa pemrograman Go memiliki pointer, mungkin buat yang pernah belajar bahasa C dan C++ ga asing lagi ya dengan namanya pointer.\nPointer itu fungsinya untuk menampung memory address dari sebuah value / variable.\nVariable dan Pointer itu 2 hal yang berbeda, walau cara deklarasinya mirip.\nKeuntungan pointer kita dapat menyimpan value nil\nInisialisasi Pointer Cara inisialisasi pointer sama dengan inisialisasi variable pada umumnya, hanya saja untuk pointer ditandai dengan symbol * sebelum penulisan tipe data.","date":"2023-03-26T15:24:31+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/17-pointer/","tags":null,"title":"Tutorial Golang: Pointer"},{"author":"Adhika Guna","categories":null,"contents":"Anonymus Function Sebelum memahami Closure, ada baiknya kita belajar apa itu anonymus function.\nAnonymus function adalah function tanpa nama, anonymus function harus berada didalam function lainnya, tidak dapat menjadi function sendiri.\nBerikut contoh anonymus function pada Golang:\nfunc main() { //this is anonymus function func(message string) { fmt.Println(message) }(\u0026#34;This is anonymus function!\u0026#34;) } Berikut hasil eksekusinya: Anonymus function sama saja dengan function biasa, hanya saja tidak memiliki nama. Anonymus function juga langsung dieksekusi setelah di definisikan.","date":"2023-03-24T16:37:28+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/16-closure/","tags":null,"title":"Tutorial Golang: Closure"},{"author":"Adhika Guna","categories":null,"contents":"Variadic Function Function variadic adalah function yang dapat menerima banyak argument sekaligus. Bukan berarti kita harus mendefine banyak parameter juga, dalam variadic function kita cukup mendefinisikan 1 parameter tapi saat definisi parameter kita harus menambahkan dengan symbol variadic ... sebelum tipe data.\nBerikut contohnya:\nfunc sum(nums ...int) int { return -1 } Pemakaian parameter Variadic function Cara pemakaian parameter variadic sama dengan array, jadi secara tidak langsung parameter nums dicontoh atas, adalah array of integer","date":"2023-03-20T22:24:21+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/15-variadic-function/","tags":null,"title":"Tutorial Golang: Variadic Function"},{"author":"Adhika Guna","categories":null,"contents":"Function Function adalah cara kita membuat sebuah blok kode untuk menjalankan tugas secara spesifik. Misal dalam program kita, di butuhkan kode untuk menambahkan 2 angka, daripada kita menulis kodenya berulang2 lebih baik kita membuat fungsinya.\nDalam Go kita dapat membuat function dengan keyword func.\nMembuat function pada Golang Berikut contoh pembuatan function pada Go:\nfunc sum(num1 int, num2 int) int { return num1 + num2 } Penjelasan:\nsum adalah nama function num1 dan num2 adalah parameter dengan tipe data int yang digunakan di dalam function int setelah tutup kurung, adalah tipe data yang akan di kembalikan function Contoh pemakaian function sum:","date":"2023-03-14T22:16:40+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/14-function/","tags":null,"title":"Tutorial Golang: Function"},{"author":"Adhika Guna","categories":null,"contents":"SLice Slice sama dengan array, untuk menyimpan banyak value di dalam 1 variable. Tapi beda dengan array slice lebih powerful dan flexible dari pada array. Slice dapat menyesuaikan sizenya, sesuai jumlah data, tidak fixed seperti array.\nInisialisasi Slice Dalam Go kita dapat inisialiasi array dengan syntax []data_type{value}, untuk mengakses slice juga sama dengan array kita dapat menggunakan varArray[num_index].\nBerikut contoh slice pada Go:\nmySlice := []string{\u0026#34;Pisang\u0026#34;, \u0026#34;Anggur\u0026#34;, \u0026#34;Mangga\u0026#34;, \u0026#34;Jeruk\u0026#34;} fmt.Println(mySlice) //[Pisang Anggur Mangga Jeruk] fmt.","date":"2023-03-10T12:20:37+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/13-slice/","tags":null,"title":"Tutorial Golang: Slice"},{"author":"Adhika Guna","categories":null,"contents":"Map Map adalah key-value data struktur, mungkin di bahasa pemrograman lain orang biasa memanggilnya hash map atau dictionary\nDalam golang kita dapat menginisialisasi map kosong dengan keyword make(map[key-type]val-type)\nKita juga dapat sekaligus menyimpan banyak value dalam sebuah map. Kita dapat menyimpan value baru di map dengan syntax mapVar[new-key] = new-val.\nBerikut contoh kode penerapan map pada Golang:\nnilaiMurid := make(map[string]int) nilaiMurid[\u0026#34;Fauzan\u0026#34;] = 89 nilaiMurid[\u0026#34;Adhika\u0026#34;] = 90 nilaiMurid[\u0026#34;Budi\u0026#34;] = 100 fmt.Println(nilaiMurid) //map[Adhika:90 Budi:100 Fauzan:89] Inisialisasi Map sekaligus dengan valuenya Dalam golang kita juga dapat menginisialisasi Map sekaligus valuenya","date":"2023-03-06T22:41:34+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/12-map/","tags":null,"title":"Tutorial Golang: Map"},{"author":"Adhika Guna","categories":null,"contents":"Array Array adalah data struktur paling sederhana dalam pemrograman, array berguna untuk menyimpan banyak data sekaligus, tapi hanya dapat menyimpan 1 jenis tipe data.\nJadi kita hanya bisa menyimpan 1 tipe data dalam sebuah array. Setiap element dalam array juga memiliki index, yang menandakan dimana posisi element itu berada.\nIndex juga berguna untuk mengambil value dalam sebuah array dengan menggunakan keyword array[num_of_index], misal dengan contoh array di atas array[3] mengembalikan string dengan value Asep","date":"2023-03-05T15:47:57+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/11-array/","tags":null,"title":"Tutorial Golang: Array"},{"author":"Adhika Guna","categories":null,"contents":"Perulangan Perulangan pada pemrograman berarti, mengeksekusi blok kode tanpa heti, kecuali kondisi yang diajukan sebagai acuan terpenuhi. Pada perulangan biasanya ada variable dan kondisi, dan jika kondisinya terpenuhi maka perulangan akan berakhir.\nSebagai contoh, jika kita ingin print sebuah string sebanyak 50x, kita hanya perlu melakukan perulangan, dibanding kita menulis kode fmt.Println() sebanyak 50x.\nPada golang perulangan hanya dapat memakai syntax for, tapi itu cukup mengcakup fungsi perulangan di bahasa pemrograman lain seperti while dan foreach.","date":"2023-03-04T15:17:37+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/10-perulangan/","tags":null,"title":"Tutorial Golang: Perulangan"},{"author":"Adhika Guna","categories":null,"contents":"Kondisi Kondisi pada pemrograman di gunakan untuk mengatur flow dari sebuah program, sama saja dengan pengambilan keputusan pada dunia nyata, misalnya saat kita puasa kita di perbolehkan makan setelah jam tertentu, nah jam tertentu inilah sebuah kondisi yang menentukan kita boleh makan atau tidak. Sama juga dengan pengambilan keputusan pada sebuah program, sebuah kode dieksekusi ketika kondisi yang diberikan terpenuhi. Ini biasa juga di sebut sebagai Control flow statements.\nGo mempunyai 2 macam keyword untuk memilih kondisi, yakni:","date":"2023-03-01T22:06:06+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/09-kondisi/","tags":["golang"],"title":"Tutorial Golang: Kondisi"},{"author":"Adhika Guna","categories":null,"contents":"Operator Dalam istilah komputer, operator adalah sebuah simbol yang melakukan operasi pada value atau variable.\nContohnya operator \u0026#43; melakukan pertambahan pada 2 value\nGo menyediakan berbagai operator yang dapat kita kategorikan sebagai berikut:\nOperator Aritmatika Operator Perbandingan Operator Logika Operator Aritmatika Operator Aritmatika digunakan untuk melakukan operasi bilangan seperti penambahan, pengurangan, perkalian, pembagian, dsb\nBerikut table operator aritmatika pada Go:\nOperator Deskripsi + (Addition) Pertambahan - (Subtraction) Pengurangan * (Multiplication) Perkalian / (Division) Pembagian % (Modulo Division) Sisa Bagi Berikut contoh kodenya:","date":"2023-02-27T01:22:24+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/08-operator/","tags":["golang"],"title":"Tutorial Golang: Operator"},{"author":"Adhika Guna","categories":null,"contents":"Konstanta Konstanta adalah nilai tetap yang tidak bisa diubah, itu menurut wikipedia ya hehe.\nCara mendeklarasi konstanta (selanjutnya akan di sebut sebagai const) pada golang sama dengan deklarasi variable tapi dengan keyword const\nConst dapat di deklarasi dengan beberapa tipe data seperti char, string, boolean dan numerin (integer dan float)\nConst harus di declare sebelum program jalan, contoh program dibawah adalah deklarasi const setelah program jalan yang akan menghasilkan error","date":"2023-02-25T01:47:38+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/07-konstanta/","tags":["golang"],"title":"Tutorial Golang: Konstanta"},{"author":"Adhika Guna","categories":null,"contents":"Komentar Hampir semua bahasa pemrograman memiliki sintaks untuk menambahkan komentar ke kode, dan tentu saja Go juga mempunyainya. Komentar adalah baris dalam program yang menjelaskan dalam bahasa manusia bagaimana kode bekerja atau mengapa ditulis seperti itu.\nKomentar itu diabaikan oleh kompiler, compiler tidak akan mengkompile komentar. Komentar menambahkan informarsi berharga yang membantu kolaborator / programmer lain atau diri kita di masa depan untuk memahami kode biar kode lebih mudah di kelola dan maintain.","date":"2023-02-25T00:59:12+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/06-komentar/","tags":["golang"],"title":"Tutorial Golang: Komentar"},{"author":"Adhika Guna","categories":null,"contents":"Tipe Data Tipe data adalah cara kita mengklasifikasikan jenis variable, karna dengan tipe data kita memberi tahu komputer jenis data yang digunakan untuk sebuah variable, Go mempunyai 3 tipe data dasar:\nbool: merepresentasikan bilai boolean, nilainya hanya aja 2, antara true atau false Numeric: merepresentasikan nilai dalam bentuk angka, yaitu integer, dan juga float (untuk decimal) string: merepresentasikan nilai dalam bentuk string string itu bisa dibilan text biasa dengan ciri ada titik 2 di awal dan di akhir seperti ini \u0026quot;ini string\u0026quot; boolean Tipe data boolean dapat di deklarasi dengan syntax bool tipe boolean ini hanya bisa menerima 2 nilai true atau false, dan setiap kita inisiali variable boolean defaultnya adalah false","date":"2023-02-22T22:34:54+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/05-tipe-data/","tags":["golang"],"title":"Tutorial Golang: Tipe Data"},{"author":"Adhika Guna","categories":null,"contents":"Variable Dalam go ada beberapa cara untuk deklarasi variable, ada yang memakai tipe datanya, ada juga yang tidak.\nDeklarasi dengan tipe data Dalam go kita bisa deklasari variable dengan keyword var, dengan format seperti ini var \u0026lt;nama_variable\u0026gt; \u0026lt;tipe_data\u0026gt; dan, berikut contoh kodenya:\npackage main import \u0026#34;fmt\u0026#34; func main() { var murid string murid = \u0026#34;Budi\u0026#34; fmt.Println(murid) } Dan ini hasilnya ketika program dijalankan: Deklarasi variable dengan tipe data juga bisa sekaligus loh, seperti ini","date":"2023-02-20T21:17:19+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/04-variable/","tags":["golang"],"title":"Tutorial Golang: Variable"},{"author":"Adhika Guna","categories":null,"contents":"Hello World! Siapa yang ga tau dengan Hello World! hello world adalah langkah pertama setiap kita belajar bahasa pemrograman, dan di tutorial kali ini kita akan belajar bagaimana membuat Hello World! di golang.\nPertama, kita buka project belajar-golang yang sebelumnya kita buat, lalu buat file baru dengan nama main.go, main.go ini biasanya adalah file utama dari project golang.\nSetelah itu kita tulis kode seperti berikut: package main import \u0026#34;fmt\u0026#34; func main() { fmt.","date":"2023-02-19T22:01:03+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/03-hello-world-golang/","tags":["golang"],"title":"Tutorial Golang: Hello World!"},{"author":"Adhika Guna","categories":null,"contents":"Instalasi Editor Kita bisa pakai Visual Studio Code sebagai code editor, memiliki fitur lengkap, dan juga cukup mudah digunakan. VScode juga memiliki extention yang mendukung bahasa pemrograman Go.\nKita bisa mendownloadnya disini https://code.visualstudio.com/ Kita install seperti biasa.\nLalu bisa buka project belajar-golang yang sebelumnya kita buat Ekstetion yang perlu di install Install juga extention golang untuk membantu kita dalam membuat project Go, dengan menginstall extention golang, banyak fitur-fitur yang dapat membantu kita seperti trace error, syntax highlighting, go to definition, code completion, dan masih banyak lagi bisa buka disini untuk lebih lengkapnya https://github.","date":"2023-02-18T14:05:37+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/02-instalasi-editor/","tags":["golang","code editor"],"title":"Tutorial Golang: Setup Code Editor"},{"author":"Adhika Guna","categories":null,"contents":"Apa itu Go module? Go modules atau go.mod adalah dependency managernya golang, bila bahasa pemrograman lain seperti php punya composer, javascript punya npm, golang punya go module.\nSetup Go Project dengan go module Pertama kita bisa membuat folder baru untuk project Go baru\nUntuk initialisasi go mod kita bisa jalankan syntax\ngo mod init \u0026lt;nama_project\u0026gt;\nnah seperti kalian lihat, file go.mod terbuat secara otomatis, sekarang kita sudah siap untuk membuat aplikasi dengan Go.","date":"2023-02-18T13:28:53+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/01-setup-go-module/","tags":["golang"],"title":"Tutorial Golang: Setup Go Module"},{"author":"Adhika Guna","categories":null,"contents":"Sejarah Golang: Golang adalah bahasa pemrograman yang dibuat di Google pada tahun 2009 oleh Robert Griesemer, Rob Pike, dan Ken Thompson.\nGolang sangat terkenal karena bahasanya mudah di pahami, dinamis dan mudah untuk integrasi dengan bahasa lain, dengan begitu golang sangat cocok untuk mengembangkan aplikasi dengan traffic tinggi.\nBerikut cara instalasi golang: Download file binary di https://go.dev/dl/ berdasarkan sistem operasi kalian. Buka file binary yang sudah terdownload, lalu kalian bisa klik continue dan ikuti step seperti install aplikasi pada umumnya.","date":"2023-02-16T21:28:52+07:00","permalink":"https://sekolahbackend.web.app/id/blog/golang/00-instalasi-golang/","tags":["golang"],"title":"Tutorial Golang: Cara Instalasi Golang"},{"author":"Katheryn Fox","categories":null,"contents":"Comming Soon","date":"2021-07-15T00:00:00Z","permalink":"https://sekolahbackend.web.app/id/page/about/","tags":null,"title":"Tentang Sekolah Backend"}]